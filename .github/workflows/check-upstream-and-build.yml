name: Check AsTeRICS Grid Release and Build APK

on:
  schedule:
    - cron: '0 6 1,15 * *'
  workflow_dispatch:

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3

      - name: Get latest upstream release
        id: get_latest_release
        run: |
          LATEST=$(curl -s https://api.github.com/repos/asterics/AsTeRICS-Grid/releases/latest | jq -r .tag_name)
          echo "Latest tag: $LATEST"
          echo "latest_tag=$LATEST" >> $GITHUB_OUTPUT

      - name: Get stored version
        id: get_stored
        run: |
          STORED=$(cat .latest_release 2>/dev/null || echo "none")
          echo "stored_tag=$STORED" >> $GITHUB_OUTPUT

      - name: Compare versions
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        run: |
          echo "${{ steps.get_latest_release.outputs.latest_tag }}" > .latest_release

      - name: Commit version update
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add .latest_release
          git commit -m "Update release version to ${{ steps.get_latest_release.outputs.latest_tag }}"
          git push

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Node.js
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Bubblewrap
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        run: npm install -g @bubblewrap/cli

      - name: Set up Android SDK
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        run: |
          mkdir -p "$HOME/android-sdk/cmdline-tools"
          cd "$HOME/android-sdk/cmdline-tools"
          curl -sSLo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip -q commandlinetools.zip
          rm commandlinetools.zip
          mv cmdline-tools latest
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | sdkmanager --licenses
          sdkmanager --install "build-tools;35.0.0" "platform-tools" "platforms;android-30"
        env:
          ANDROID_HOME: ${{ github.workspace }}/android-sdk

      - name: Init Bubblewrap
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        run: echo | bubblewrap init --config bubblewrap-config.json
        env:
          ANDROID_HOME: ${{ github.workspace }}/android-sdk

      - name: Build APK
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        run: bubblewrap build
        env:
          ANDROID_HOME: ${{ github.workspace }}/android-sdk

      - name: Upload release to GitHub
        if: steps.get_latest_release.outputs.latest_tag != steps.get_stored.outputs.stored_tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_latest_release.outputs.latest_tag }}
          name: "APK for AsTeRICS Grid ${{ steps.get_latest_release.outputs.latest_tag }}"
          files: "**/*.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
